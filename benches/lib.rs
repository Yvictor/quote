extern crate quote;
#[macro_use]
extern crate bencher;
use quote::io::fs::*;
use quote::paser::bcd::*;
use quote::paser::f6::*;

use bencher::Bencher;
fn benchmark_bcd2str(bencher: &mut Bencher) {
    bencher.iter(|| bcd2str(128));
}

fn benchmark_bcd2num(bencher: &mut Bencher) {
    bencher.iter(|| bcd2num(128));
}

fn benchmark_bcd2price(bencher: &mut Bencher) {
    bencher.iter(|| bcd2price([0, 133, 32, 0, 0]));
}

fn benchmark_bcd2volume(bencher: &mut Bencher) {
    bencher.iter(|| bcd2volume([0, 133, 32, 0]));
}

fn benchmark_bytes2quote(bencher: &mut Bencher) {
    bencher.iter(|| {
        bytes2quote(
            &[
                0x0, 0x5, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x5, 0x45, 0x0, 0x0, 0x0, 0x0,
                0x0, 0x1, 0x0, 0x5, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x5, 0x40, 0x0, 0x0,
                0x0, 0x0, 0x0, 0x1, 0x0, 0x5, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x5, 0x22,
                0x0, 0x0, 0x0, 0x0, 0x0, 0x24, 0x0, 0x5, 0x55, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0,
                0x5, 0x58, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x5, 0x60, 0x0, 0x0, 0x0, 0x0, 0x0,
                0x1, 0x0, 0x5, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x5, 0x62, 0x0, 0x0, 0x0,
                0x0, 0x0, 0x1,
            ],
            1,
            5,
            5,
        )
    });
}

fn benchmark_bytes2f6header(bencher: &mut Bencher) {
    bencher.iter(|| {
        bytes2header(&[
            0x1b, 0x1, 0x31, 0x1, 0x6, 0x4, 0x0, 0x10, 0x93, 0x59, 0x39, 0x31, 0x31, 0x36, 0x31,
            0x36, 0x9, 0x0, 0x0, 0x14, 0x8, 0x66, 0xda, 0x0, 0x8, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0,
            0x1, 0x82, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x1, 0x82, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0,
            0x0, 0x1, 0x81, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x1, 0x80, 0x0, 0x0, 0x0, 0x0, 0x16,
            0x0, 0x0, 0x1, 0x76, 0x0, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x1, 0x75, 0x0, 0x0, 0x0, 0x0,
            0x20, 0x0, 0x0, 0x1, 0x93, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x1, 0x94, 0x0, 0x0, 0x0,
            0x0, 0x1, 0x0, 0x0, 0x1, 0x95, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x96, 0x0, 0x0,
            0x0, 0x0, 0x25, 0x0, 0x0, 0x1, 0x97, 0x0, 0x0, 0x0, 0x0, 0x26, 0xc6,
        ])
    });
}

fn benchmark_bytes2f6(bencher: &mut Bencher) {
    bencher.iter(|| {
        bytes2f6(&[
            0x1b, 0x1, 0x31, 0x1, 0x6, 0x4, 0x0, 0x10, 0x93, 0x59, 0x39, 0x31, 0x31, 0x36, 0x31,
            0x36, 0x9, 0x0, 0x0, 0x14, 0x8, 0x66, 0xda, 0x0, 0x8, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0,
            0x1, 0x82, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x1, 0x82, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0,
            0x0, 0x1, 0x81, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x1, 0x80, 0x0, 0x0, 0x0, 0x0, 0x16,
            0x0, 0x0, 0x1, 0x76, 0x0, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x1, 0x75, 0x0, 0x0, 0x0, 0x0,
            0x20, 0x0, 0x0, 0x1, 0x93, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x1, 0x94, 0x0, 0x0, 0x0,
            0x0, 0x1, 0x0, 0x0, 0x1, 0x95, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x96, 0x0, 0x0,
            0x0, 0x0, 0x25, 0x0, 0x0, 0x1, 0x97, 0x0, 0x0, 0x0, 0x0, 0x26, 0xc6,
        ])
    });
}

fn benchmark_readf6file(bencher: &mut Bencher) {
    use std::path::Path;
    fn f6handler(f6: F6) {
        // println!("{:?}", f6);
    }
    let path = Path::new("tests/data/f6_01000001_01001000_TP03.new");
    bencher.iter(|| {
        readf6file(&path, f6handler);
    });
}

fn benchmark_readf6bufreader(bencher: &mut Bencher) {
    use std::path::Path;
    fn f6handler(f6: F6) {
        // println!("{:?}", f6);
    }
    let path = Path::new("tests/data/f6_01000001_01001000_TP03.new");
    bencher.iter(|| {
        readf6bufreader(&path, f6handler);
    });
}

fn benchmark_readf6filebuffer(bencher: &mut Bencher) {
    use std::path::Path;
    fn f6handler(f6: F6) {
        // println!("{:?}", f6);
    }
    let path = Path::new("tests/data/f6_01000001_01001000_TP03.new");
    bencher.iter(|| {
        readf6filebuffer(&path, f6handler);
    });
}

benchmark_group!(
    benches_bcd,
    benchmark_bcd2str,
    benchmark_bcd2num,
    benchmark_bcd2price,
    benchmark_bcd2volume,
    benchmark_bytes2quote,
    benchmark_bytes2f6header,
    benchmark_bytes2f6,
    benchmark_readf6file,
    benchmark_readf6bufreader,
    benchmark_readf6filebuffer,
);
benchmark_main!(benches_bcd);
